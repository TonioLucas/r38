rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    // Admins: dynamically check against settings/admins document
    function isAdmin() {
      return isAuthenticated() && (
        request.auth.token.email in get(/databases/$(database)/documents/settings/admins).data.emails
      );
    }

    // Leads: client cannot write; admin can read
    match /leads/{leadId} {
      allow create, update, delete: if false; // writes must go through Functions (Admin SDK)
      allow read: if isAdmin();
    }

    // Settings: public read (site content); admin write
    match /settings/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Pages: only expose privacy when enabled; admin can read/write all
    match /pages/{docId} {
      allow read: if (docId == "privacy" && resource.data.enabled == true) || isAdmin();
      allow write: if isAdmin();
    }

    // Products: public read, admin write
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Product prices: public read, admin write
    match /product_prices/{priceId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Customers: user can read own, admin can read all
    match /customers/{customerId} {
      allow read: if isAuthenticated() && (request.auth.uid == customerId || isAdmin());
      allow write: if false;  // Only via Cloud Functions
    }

    // Subscriptions: user can read own, admin can read all
    match /subscriptions/{subscriptionId} {
      allow read: if isAuthenticated() && (
        resource.data.customer_id == request.auth.uid || isAdmin()
      );
      allow write: if false;  // Only via Cloud Functions
    }

    // Payments: admin only
    match /payments/{paymentId} {
      allow read: if isAdmin();
      allow write: if false;  // Only via Cloud Functions
    }

    // Affiliates: admin only
    match /affiliates/{affiliateId} {
      allow read: if isAdmin();
      allow write: if false;  // Only via Cloud Functions
    }

    // Affiliate transactions: admin only
    match /affiliate_transactions/{transactionId} {
      allow read: if isAdmin();
      allow write: if false;  // Only via Cloud Functions
    }

    // Webhook events: admin only
    match /webhook_events/{eventId} {
      allow read: if isAdmin();
      allow write: if false;  // Only via Cloud Functions
    }

    // Manual verifications: authenticated users can create, admin can read/update
    match /manual_verifications/{verificationId} {
      allow create: if isAuthenticated();
      allow read, update: if isAdmin();
    }

    // Default deny for everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
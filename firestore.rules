rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    // Admins: either custom claim admin=true OR email present in settings/admins.emails array
    function isAdmin() {
      return isAuthenticated() && (
        request.auth.token.admin == true || (
          exists(/databases/$(database)/documents/settings/admins) &&
          (request.auth.token.email in get(/databases/$(database)/documents/settings/admins).data.emails)
        )
      );
    }

    // Leads: client cannot write; admin can read
    match /leads/{leadId} {
      allow create, update, delete: if false; // writes must go through Functions (Admin SDK)
      allow read: if isAdmin();
    }

    // Settings: public read (site content); admin write
    match /settings/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Pages: only expose privacy when enabled; admin can read/write all
    match /pages/{docId} {
      allow read: if (docId == "privacy" && resource.data.enabled == true) || isAdmin();
      allow write: if isAdmin();
    }

    // Default deny for everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}